<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bayeszou.com/"/>
  <updated>2017-03-23T06:27:21.000Z</updated>
  <id>http://bayeszou.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用 CSS 居中对齐</title>
    <link href="http://bayeszou.com/2017/03/23/%E5%88%A9%E7%94%A8%20CSS%20%E5%B1%85%E4%B8%AD%E5%AF%B9%E9%BD%90/"/>
    <id>http://bayeszou.com/2017/03/23/利用 CSS 居中对齐/</id>
    <published>2017-03-23T02:54:00.000Z</published>
    <updated>2017-03-23T06:27:21.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>CSS 居中的方法实在是太多啦，每次光靠 Google 去搜都要费好大力气。看了 <a href="https://css-tricks.com/centering-css-complete-guide/" target="_blank" rel="external">Centering in CSS: A Complete Guide</a> 才清楚了许多，对自己的认识做个总结。</p>
<a id="more"></a>
<p>[TOC]</p>
<h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><h3 id="inline-和-inline-元素"><a href="#inline-和-inline-元素" class="headerlink" title="inline 和 inline-* 元素"></a>inline 和 inline-* 元素</h3><p>在一个 block-level 中的 <code>inline</code>, <code>inline-block</code>, <code>inline-table</code>, <code>inline-flex</code> 元素，居中只需要一行：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center-children</span> &#123;</div><div class="line">    <span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="block-level-元素"><a href="#block-level-元素" class="headerlink" title="block-level 元素"></a>block-level 元素</h3><p>将左右的 <code>margin</code> 设置升 <code>auto</code> 就可以让一个 block-level 元素居中，常常见到这种写法：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span>&#123;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>简写虽然方便，但是如果不希望上下 <code>margin</code> 设置为 0，此写法就会带来副作用。分别设置会更安全些：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.center</span>&#123;</div><div class="line">  <span class="attribute">margin-left</span>:  auto;</div><div class="line">  <span class="attribute">margin-right</span>: auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="至少两个的-block-level-元素"><a href="#至少两个的-block-level-元素" class="headerlink" title="至少两个的 block-level 元素"></a>至少两个的 block-level 元素</h3><p>多个 block-level 的元素在居中在一行，需要将 <code>display: block</code> 改为 <code>display: inline-block</code> 然后设置其父元素的 <code>text-align</code>，具体见下样例：</p>
<p><a class="jsbin-embed" href="http://jsbin.com/zutimo/embed?output" target="_blank" rel="external">JS Bin on jsbin.com</a><script src="http://static.jsbin.com/js/embed.min.js?3.35.5"></script></p>
<p>或者，你也可以使用 flexbox 呀~ 这个稍后说。</p>
<h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><p>垂直居中会稍微麻烦一丢</p>
<h3 id="inline-和-inline-元素-1"><a href="#inline-和-inline-元素-1" class="headerlink" title="inline 和 inline-* 元素"></a>inline 和 inline-* 元素</h3><p>有一个简单粗暴的方法：直接设置上下 <code>padding</code> 相等。不过有时候，这个方法不是那么有效。</p>
<h4 id="只有一行"><a href="#只有一行" class="headerlink" title="只有一行"></a>只有一行</h4><p>因为只有一行，所以能设置 <code>line-height</code> 和 <code>height</code> 相等完成居中。</p>
<h4 id="存在多行"><a href="#存在多行" class="headerlink" title="存在多行"></a>存在多行</h4><p>如果是自己设置的 <code>table-cell</code> 元素，需要设置 <code>vertical-align: middle;</code> 完成居中。在 <code>td</code> 这项属性值是默认的，不要设置。详见样例：</p>
<p><a class="jsbin-embed" href="http://jsbin.com/kawido/embed?output" target="_blank" rel="external">JS Bin on jsbin.com</a><script src="http://static.jsbin.com/js/embed.min.js?3.35.5"></script></p>
<p>巧了，你也可以使用 flexbox 呀~ 这个稍后再说。</p>
<h3 id="一个-block-level-元素"><a href="#一个-block-level-元素" class="headerlink" title="一个 block-level 元素"></a>一个 block-level 元素</h3><p>有些时候我们未必会知道 block-level 元素的高度，这取决于其内部放置的元素。如果不用 flexbox 的话，需要分情况讨论：</p>
<h4 id="已知高度"><a href="#已知高度" class="headerlink" title="已知高度"></a>已知高度</h4><p>已知高度的话，先学会算数，再学会定位，用样例说话：</p>
<p><a class="jsbin-embed" href="http://jsbin.com/kunami/embed?output" target="_blank" rel="external">JS Bin on jsbin.com</a><script src="http://static.jsbin.com/js/embed.min.js?3.35.5"></script></p>
<h4 id="未知高度"><a href="#未知高度" class="headerlink" title="未知高度"></a>未知高度</h4><p>未知也没关系，设置 <code>top: 50%</code>，这样元素的顶部就处于父元素正中间，再让其向上平移自身 50%（<code>transform: translateY(-50%);</code>）的高度，其内容就居中了。可以自己编辑样例试试：</p>
<p><a class="jsbin-embed" href="http://jsbin.com/wirekot/embed?output" target="_blank" rel="external">JS Bin on jsbin.com</a><script src="http://static.jsbin.com/js/embed.min.js?3.35.5"></script></p>
<p>当然，你也可以使用 flexbox 呀~ 这个还是稍后再说。</p>
<h2 id="水平垂直居中"><a href="#水平垂直居中" class="headerlink" title="水平垂直居中"></a>水平垂直居中</h2><p>可以通过以上方法的组合按自己喜欢的方式完成水平居中。其中通过定位对各个浏览器都比较友好，水平居中直接设置 <code>top: 50%; left: 50%;</code>；垂直居中按照「已知高度」和「未知高度」的思路区分实现，注意在「未知高度」时还要兼顾 x 方向平移 50%（即 <code>transform: translate(-50%, -50%)</code>）。</p>
<h2 id="使用-flexbox"><a href="#使用-flexbox" class="headerlink" title="使用 flexbox!!!"></a>使用 flexbox!!!</h2><p>如果不需要考虑部分老旧浏览器的兼容问题，那么 flexbox 则是万能了。强烈推荐学习并使用 flexbox，会省下不少功夫！怎么学习？<a href="http://flexboxfroggy.com/#zh-cn" target="_blank" rel="external">青蛙</a>会告诉你~</p>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>这里说得所有<strong>居中</strong>，都是<strong>浏览器</strong>认为的<strong>居中</strong>，有时与<strong>人类眼中的居中</strong>，是<strong>不同</strong>的。例如，将单行内容为 <code>。。。</code> 的文字按以上任一方法垂直居中，其显示效果是偏下的。原因归根于，我们看到的文字是基于像素的，浏览器看到的文字是基于当前选用的字体信息，可以通过这篇<a href="http://iamvdo.me/en/blog/css-font-metrics-line-height-and-vertical-align" target="_blank" rel="external">文章</a>（或其<a href="https://zhuanlan.zhihu.com/p/25808995?group_id=825729871287291904" target="_blank" rel="external">译文</a>）了解大概。对于文字，浏览器认为的居中未必是像素居中。所以，某个大字标题在网页中的居中效果和设计稿中不同时，不要太惊讶。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://css-tricks.com/centering-css-complete-guide/" target="_blank" rel="external">Centering in CSS: A Complete Guide</a></li>
<li><a href="https://zhanglun.github.io/2014/09/30/css%E5%85%83%E7%B4%A0%E5%B1%85%E4%B8%AD%E5%AF%B9%E9%BD%90%E5%A4%A7%E6%B3%95/" target="_blank" rel="external">CSS 元素居中对齐大法</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS 居中的方法实在是太多啦，每次光靠 Google 去搜都要费好大力气。看了 &lt;a href=&quot;https://css-tricks.com/centering-css-complete-guide/&quot;&gt;Centering in CSS: A Complete Guide&lt;/a&gt; 才清楚了许多，对自己的认识做个总结。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对 meta 的初步认识</title>
    <link href="http://bayeszou.com/2017/03/14/%E5%AF%B9%20%3Cmeta%3E%20%E7%9A%84%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86/"/>
    <id>http://bayeszou.com/2017/03/14/对 &lt;meta&gt; 的初步认识/</id>
    <published>2017-03-14T01:57:00.000Z</published>
    <updated>2017-03-23T07:12:13.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>在 <a href="https://www.coursera.org" target="_blank" rel="external">Coursera</a> 学习 <a href="https://www.coursera.org/learn/html-css-javascript-for-web-developers/home" target="_blank" rel="external">HTML CSS JavaScript for Web Developers</a> 的时候，有讲如果要让网页在移动设备上更好的显示，需要在 HTML 中的 <code>&lt;head&gt;</code> 里加上这一行代码：</p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>使用 Hexo 在搭建博客时也发现了类似的内容：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"generator"</span> <span class="attr">content</span>=<span class="string">"Bayestheorem"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">"Bayes Zou"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"BayesZ"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></div></pre></td></tr></table></figure>
<p>当时并没有太在意 <code>&lt;meta&gt;</code> 的作用，认为不过是一些「约定好的声明」罢了。然后听方老师的课知道了 Github 上的这个项目<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="[GitHub HEAD](https://github.com/joshbuchea/HEAD)
">[1]</span></a></sup>，感觉这才第一次认识了这个元素。</p>
<h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>借用 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta" target="_blank" rel="external">MDN</a> 的描述：</p>
<blockquote>
<p>The <strong>HTML</strong> <code>&lt;meta&gt;</code> <strong>element</strong> represents any metadata information that cannot be represented by one of the other HTML meta-related elements. (<code>&lt;base&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code>, <code>&lt;style&gt;</code> or <code>&lt;title&gt;</code>).</p>
</blockquote>
<p><code>&lt;meta&gt;</code> 元素表示所有不能被其他 HTML 元相关元素（如 <code>&lt;base&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code>, <code>&lt;style&gt;</code> or <code>&lt;title&gt;</code>）表示的元信息。</p>
<p><code>&lt;meta&gt;</code> 里的信息不会显示在页面上，因为这不是给用户看的，而是提供给机器的信息。</p>
<p><code>&lt;meta&gt;</code> 不该写成 <code>&lt;meta/&gt;</code>。</p>
<p> <code>&lt;meta&gt;</code> 元素有两个属性（attribute），<code>http-equiv</code> 和 <code>name</code> 属性，以及和属性对应的属性值（content）。有兴趣了解详细信息的可以自行查阅<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="[HTML 标准规范](https://www.w3.org/TR/html5/document-metadata.html#the-meta-element)、[MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta) 及 Lxxyx 的[文章](https://segmentfault.com/a/1190000004279791)
">[2]</span></a></sup>，这里主要想总结下自己所理解的 <code>&lt;meta&gt;</code> 元素能做什么，和一点相关思考。</p>
<h2 id="能做的"><a href="#能做的" class="headerlink" title="能做的"></a>能做的</h2><h3 id="关于浏览器"><a href="#关于浏览器" class="headerlink" title="关于浏览器"></a>关于浏览器</h3><ul>
<li>这么元信息可以被用于让浏览器知道网页的<strong>编码</strong>：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>让浏览器知道测采取哪种版本<strong>渲染</strong>页面：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"x-ua-compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>或者根据国情选择<strong>浏览器的内核</strong>：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit|ie-comp|ie-stand"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>在 iPhone 上伪装成一个离线 app：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>控制页面在本地的<strong>缓存</strong>，若禁止，则用户将无法离线访问：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Cache-Control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>还有许多作用，例如开头提及的优化移动端的显示，站点适配等等。</p>
<h3 id="SEO-优化"><a href="#SEO-优化" class="headerlink" title="SEO 优化"></a>SEO 优化</h3><ul>
<li>描述页面，可以概括网页的大致内容：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"your words"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>添加关键词，让用户搜索相关关键字或短语时，更容易找到符合要求的网页：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keyword"</span> <span class="attr">content</span>=<span class="string">"your tags"</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>以及页面重定向：</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"0;url="</span>&gt;</span></div></pre></td></tr></table></figure>
<p>除了以上，和可以声明<strong>网页作者</strong>，设置搜索<strong>引擎索引方式</strong>，标注<strong>版权</strong>信息等等。</p>
<h2 id="相关思考"><a href="#相关思考" class="headerlink" title="相关思考"></a>相关思考</h2><h3 id="的位置"><a href="#的位置" class="headerlink" title=" 的位置"></a><meta> 的位置</h3><p>在查阅关于 <code>&lt;meta&gt;</code> 信息的过程中看到这样一个回答：</p>
<blockquote>
<p>…叫头标签，需要写在 meta 内部最前面，在它之前你唯一能写的只有 “title”, 其他都不可以。</p>
</blockquote>
<p>关于 <code>&lt;meta&gt;</code> 在 <code>&lt;head&gt;</code> 中的位置，规范中似乎没有找到要求。经搜索发现贺老在知乎的答案<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="[前端规范，HTML 的 `<head>` 标签内 `<meta>`、`<title>` 等标签顺序是怎样的?](https://www.zhihu.com/question/28714116/answer/41830759)">[3]</span></a></sup>：</p>
<blockquote>
<p>没有特定规定。<br>不过我至少有一条建议：确保 <code>&lt;meta charset=encoding&gt;</code> 放在最前，让浏览器尽早获得字符编码信息，如果要浏览器据此决定转码可以早点转。</p>
</blockquote>
<h3 id="越来越长的"><a href="#越来越长的" class="headerlink" title="越来越长的 "></a>越来越长的 <head></head></h3><p>看到 HEAD<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="[GitHub HEAD](https://github.com/joshbuchea/HEAD)
">[1]</span></a></sup> 的时候，本能有两个反应：</p>
<blockquote>
<p>天啊，靠 <code>&lt;head&gt;</code> 原来能做这么多事？！😳</p>
</blockquote>
<p>以及</p>
<blockquote>
<p>天啊，原来这么多平台都各自靠 <code>&lt;head&gt;</code> 做这么多事？！☹️</p>
</blockquote>
<p>有些 <code>&lt;meta&gt;</code> &amp; <code>&lt;link&gt;</code> 定义重复，但是为了兼容不同私有平台的「私货」，使 <code>&lt;head&gt;</code> 被越塞越满，尤其一些 Web App：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon-precomposed"</span> <span class="attr">sizes</span>=<span class="string">"144x144"</span> <span class="attr">href</span>=<span class="string">"images/touch/apple-touch-icon-144x144-precomposed.png"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon-precomposed"</span> <span class="attr">sizes</span>=<span class="string">"114x114"</span> <span class="attr">href</span>=<span class="string">"images/touch/apple-touch-icon-114x114-precomposed.png"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon-precomposed"</span> <span class="attr">sizes</span>=<span class="string">"72x72"</span> <span class="attr">href</span>=<span class="string">"images/touch/apple-touch-icon-72x72-precomposed.png"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon-precomposed"</span> <span class="attr">href</span>=<span class="string">"images/touch/apple-touch-icon-57x57-precomposed.png"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-status-bar-style"</span> <span class="attr">content</span>=<span class="string">"black"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-title"</span> <span class="attr">content</span>=<span class="string">"Lighten"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"mobile-web-app-capable"</span> <span class="attr">content</span>=<span class="string">"yes"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mate</span> <span class="attr">name</span>=<span class="string">"theme-color"</span> <span class="attr">content</span>=<span class="string">"#000000"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>W3C WebApps 工作组指定的 <a href="https://www.w3.org/TR/appmanifest/" target="_blank" rel="external">W3C Web App Manifest</a> 不失为一种好的解决办法。或许在将来，不停加 <code>&lt;meta&gt;</code>/<code>&lt;link&gt;</code> 的做法会被使用 JSON 代替。</p>
<h2 id="其他参考"><a href="#其他参考" class="headerlink" title="其他参考"></a>其他参考</h2><ul>
<li><a href="https://segmentfault.com/a/1190000002407912" target="_blank" rel="external">常用 meta 整理</a></li>
<li><a href="https://huangxuan.me/2017/02/09/nextgen-web-pwa/#Web App Manifest" target="_blank" rel="external">下一代 Web 应用模型 —— Progressive Web App</a></li>
</ul>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://github.com/joshbuchea/HEAD" target="_blank" rel="external">GitHub HEAD</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.w3.org/TR/html5/document-metadata.html#the-meta-element" target="_blank" rel="external">HTML 标准规范</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta" target="_blank" rel="external">MDN</a> 及 Lxxyx 的<a href="https://segmentfault.com/a/1190000004279791" target="_blank" rel="external">文章</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://www.zhihu.com/question/28714116/answer/41830759" target="_blank" rel="external">前端规范，HTML 的 <code>&lt;head&gt;</code> 标签内 <code>&lt;meta&gt;</code>、<code>&lt;title&gt;</code> 等标签顺序是怎样的?</a><a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 &lt;a href=&quot;https://www.coursera.org&quot;&gt;Coursera&lt;/a&gt; 学习 &lt;a href=&quot;https://www.coursera.org/learn/html-css-javascript-for-web-developers/home&quot;&gt;HTML CSS JavaScript for Web Developers&lt;/a&gt; 的时候，有讲如果要让网页在移动设备上更好的显示，需要在 HTML 中的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 里加上这一行代码：&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2015 年末的资格</title>
    <link href="http://bayeszou.com/2015/12/31/2015%20%E5%B9%B4%E6%9C%AB%E7%9A%84%E8%B5%84%E6%A0%BC/"/>
    <id>http://bayeszou.com/2015/12/31/2015 年末的资格/</id>
    <published>2015-12-31T10:00:00.000Z</published>
    <updated>2017-03-23T06:34:18.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>见完老友，听着钟爱的声音，静静思考。几个月来，还不够成了对自己资格的评价。</p>
<a id="more"></a>
<p>年末，无需纠结于资格，多点对未来的愿景。</p>
<p>引用木遥老师对于博客的<a href="http://blog.farmostwood.net/351.html" target="_blank" rel="external">想法</a> :)</p>
<blockquote>
<p>我们彼此谈论也互相倾听并且乐此不疲，不是因为我们有曝露和窥探的癖好，而只是为了从别人身上看到更多的自己。我们要知道我们不是孤独的，还有人愿意首肯我们的坚持，了解我们的努力，期待我们的进步。那不只是记录生活的方式而已，而是生活本身的一部分。在这个过程中，在这些文字的觥筹交错之间，我们得以定义自己的存在，触碰彼此的温暖——以及更重要的，看见我们的未来。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;见完老友，听着钟爱的声音，静静思考。几个月来，还不够成了对自己资格的评价。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
